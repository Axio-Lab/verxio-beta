generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PaymentRecord {
  id                    String        @id @default(cuid())
  reference             String        @unique
  amount                String
  recipient             String
  splToken              String
  status                PaymentStatus @default(PENDING)
  signature             String?
  loyaltyProgramAddress String?
  loyaltyProgramName    String?
  loyaltyDiscount       String        @default("0")
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt

  @@map("payment_records")
}

model LoyaltyProgram {
  id                 String   @id @default(cuid())
  creator            String
  programPublicKey   String
  /// @encrypted
  programSecretKey   String
  signature          String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  authorityPublicKey String
  /// @encrypted
  authoritySecretKey String
}

model LoyaltyPass {
  id             String   @id @default(cuid())
  programAddress String
  recipient      String
  passPublicKey  String
  /// @encrypted
  passPrivateKey String
  signature      String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model User {
  id            String   @id @default(cuid())
  walletAddress String   @unique
  email         String?
  name          String?
  bio           String?
  avatar        String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("users")
}

model VerxioCredit {
  id          String   @id @default(cuid())
  userAddress String   @unique
  balance     Float    @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("verxio_credits")
}

model VerxioCreditHistory {
  id           String   @id @default(cuid())
  creator      String
  points       Int
  action       String
  assetAddress String
  assetOwner   String
  createdAt    DateTime @default(now())

  @@map("verxio_credit_history")
}

model LoyaltyProgramClaimStatus {
  id             String   @id @default(cuid())
  programAddress String   @unique
  claimEnabled   Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("loyalty_program_claim_status")
}

enum PaymentStatus {
  PENDING
  SUCCESS
  FAILED
  CANCELLED
}
